---
- name: Ensure prerequisites are done
  block:
    - name: Ensure required packages are installed
      package:
        name: '{{ role_ad_membership_required_packages }}'
        state: present

    - name: Discover realm
      command: /usr/sbin/realm discover '{{ ansible_domain }}'
      register: role_ad_membership_register_discover_realm
      changed_when: False
      failed_when: False

- name: Join Windows AD
  block:
    - name: Check if short hostname length is compliant
      assert:
        that: ansible_hostname | length <= role_ad_membership_netbios_max_length
        msg: 'Hostname too long. Maximum Netbios characters are: {{ role_ad_membership_netbios_max_length }}'

    - name: Join AD
      shell: >
                /usr/bin/echo '{{ role_ad_membership_sa_password }}' |
                /usr/sbin/realm join -v --user={{ role_ad_membership_sa_username }}
                --computer-ou={{ role_ad_membership_computer_ou }}
                --computer-name={{ ansible_hostname | upper }}
                --os-name={{ ansible_distribution }}
                --os-version={{ ansible_distribution_version }}
                {{ ansible_domain }}
      register: role_ad_membership_join_cmd_register
      no_log: True
  when:
    - '"configured: no" in role_ad_membership_register_discover_realm.stdout'
    - not role_ad_membership_leave_ad
    - not role_ad_membership_molecule_dummy

- name: Ensure configurations are set
  block:
    - name: Populate AD group list
      set_fact:
        role_ad_membership_allowed_group_list: '{{ role_ad_membership_allowed_group_list | default([]) + vars[item] }}'
      loop: "{{ vars.keys() | select('match', '^role_ad_membership_allowed_group_list_.*$') | list }}"

    - name: Deploy configurations
      template:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        owner: '{{ item.owner }}'
        group: '{{ item.group }}'
        mode: '{{ item.mode }}'
      notify:
        - restart_realmd
        - restart_sssd
        - restart_oddjobd
      loop:
        - { src: 'krb5.conf.j2', dest: '/etc/krb5.conf', owner: 'root', group: 'root', mode: '0644' }
        - { src: 'sssd.conf.j2', dest: '/etc/sssd/sssd.conf', owner: 'root', group: 'root', mode: '0600' }
  when:
    - not role_ad_membership_leave_ad
    - not role_ad_membership_molecule_dummy

- name: Leave AD
  block:
    - name: Leave Windows AD | part 1
      shell: >
            /usr/bin/echo {{ role_ad_membership_sa_password }} |
            /usr/sbin/realm leave -r -v --user={{ role_ad_membership_sa_username }}
      register: role_ad_membership_leave_cmd_register
      failed_when: False
      no_log: True

    - name: Leave Windows AD | part 2
      shell: >
            /usr/bin/echo '{{ role_ad_membership_sa_password }}' |
            /usr/sbin/adcli delete-computer -v
            --login-user={{ role_ad_membership_sa_username }}
            --domain={{ ansible_domain }}
            --domain-controller={{ ansible_domain | upper }}
            --stdin-password
      register: role_ad_membership_leave_cmd_register
      failed_when: False
      no_log: True
  when:
    - '"configured: kerberos-member" in role_ad_membership_register_discover_realm.stdout'
    - role_ad_membership_leave_ad
    - not role_ad_membership_molecule_dummy
...
